services:
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KARAFKA_ADVERTISED_HOST_NAME: 'kafka'
  db:
    image: postgres:16-bookworm
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: rails
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  web:
    build: .
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgres://rails:password@db:5432/procare_production
      - RAILS_ENV=production
    develop:
      watch:
        - action: sync
          path: .
          target: /rails
          ignore:
            - .env
    depends_on:
      - kafka
      - db
  consumer:
    build: .
    environment:
      - DATABASE_URL=postgres://rails:password@db:5432/procare_production
      - RAILS_ENV=production
    command: bundle exec karafka server
    depends_on:
      - kafka
      - db
volumes:
  db-data:
